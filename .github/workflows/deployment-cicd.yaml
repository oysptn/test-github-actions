name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (e.g., dev, sqa, prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - sqa
          - prod

jobs:
  tf_fmt:
    name: Deploy Site
    runs-on: ubuntu-latest
    env:
      AWS_SECRET_ACCESS_KEY_NAME: ${{ format('AWS_SECRET_ACCESS_KEY_{0}', 'DEV') }}
      AWS_ACCESS_KEY_ID_NAME: ${{ format('AWS_ACCESS_KEY_ID_{0}', 'DEV') }}
      
    steps:
    - name: Terraform Validate
      uses: hashicorp/terraform-github-actions/validate@v0.3.7
        
    - name: Display AWS_SECRET_ACCESS_KEY
      run: |
        echo "AWS_ACCESS_KEY_ID: ${{ secrets[env.AWS_ACCESS_KEY_ID_NAME] }}"
      shell: bash
      
    - name: Checkout Repo
      uses: actions/checkout@v1

    - name: Terraform Init
      uses: hashicorp/terraform-github-actions/init@v0.4.0
      env:
        GITHUB_TOKEN: ${{ secrets.RUNNER_TOKEN }}
        TF_ACTION_WORKING_DIR: 'iac/${{ github.event.inputs.environment }}'
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets[env.AWS_ACCESS_KEY_ID_NAME] }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets[env.AWS_SECRET_ACCESS_KEY_NAME] }}

    - name: Terraform Validate
      uses: hashicorp/terraform-github-actions/validate@v0.3.7

    # - uses: trstringer/manual-approval@v1
    #   with:
    #     secret: ${{ github.TOKEN }}
    #     approvers: comicalwriter
    #     minimum-approvals: 1
    #     issue-title: "Deploying v1.0.0 to ${{ github.event.inputs.environment }}"
    #     issue-body: "Review the terraform plan, then approve or deny the deployment of v1.0.0 to ${{ github.event.inputs.environment }}"
    #     exclude-workflow-initiator-as-approver: false

    - name: Terraform Plan    
      uses: hashicorp/terraform-github-actions/plan@v0.4.0
      env:
        GITHUB_TOKEN: ${{ secrets.RUNNER_TOKEN }}
        TF_ACTION_WORKING_DIR: 'iac/${{ github.event.inputs.environment }}'
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets[env.AWS_ACCESS_KEY_ID_NAME] }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets[env.AWS_SECRET_ACCESS_KEY_NAME] }}    
      
